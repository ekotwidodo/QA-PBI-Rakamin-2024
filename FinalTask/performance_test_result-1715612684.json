{
  "metrics": {
    "http_req_sending": {
      "type": "trend",
      "contains": "time",
      "values": {
        "p(90)": 0.8878200000000005,
        "p(95)": 1.18081,
        "avg": 0.48961754285714376,
        "min": 0,
        "med": 0.5109,
        "max": 17.7058
      }
    },
    "http_req_tls_handshaking": {
      "type": "trend",
      "contains": "time",
      "values": {
        "p(95)": 4068.4948,
        "avg": 518.250565085714,
        "min": 0,
        "med": 0,
        "max": 10507.1386,
        "p(90)": 1651.7304200000005
      }
    },
    "http_reqs": {
      "type": "counter",
      "contains": "default",
      "values": {
        "count": 7000,
        "rate": 72.83287881246981
      }
    },
    "group_duration": {
      "type": "trend",
      "contains": "time",
      "values": {
        "max": 58862.6469,
        "p(90)": 10374.086420000001,
        "p(95)": 12214.42248,
        "avg": 5979.6757377999775,
        "min": 3162.7794,
        "med": 4283.802750000001
      }
    },
    "vus": {
      "type": "gauge",
      "contains": "default",
      "values": {
        "value": 1,
        "min": 1,
        "max": 1000
      }
    },
    "http_req_duration{expected_response:true}": {
      "values": {
        "p(90)": 4593.01616,
        "p(95)": 5920.386869999997,
        "avg": 2297.2656752357852,
        "min": 583.7325,
        "med": 1254.6652,
        "max": 55858.8593
      },
      "type": "trend",
      "contains": "time"
    },
    "data_sent": {
      "type": "counter",
      "contains": "data",
      "values": {
        "count": 1302775,
        "rate": 13554.979099273623
      }
    },
    "http_req_duration": {
      "type": "trend",
      "contains": "time",
      "values": {
        "med": 1254.7986,
        "max": 55858.8593,
        "p(90)": 4592.71872,
        "p(95)": 5919.462289999993,
        "avg": 2297.524117485718,
        "min": 583.7325
      },
      "thresholds": {
        "p(95)<2000": {
          "ok": false
        }
      }
    },
    "iteration_duration": {
      "type": "trend",
      "contains": "time",
      "values": {
        "avg": 11959.644220599985,
        "min": 7354.9607,
        "med": 10966.3008,
        "max": 70915.1713,
        "p(90)": 17449.49503,
        "p(95)": 19661.470569999998
      }
    },
    "vus_max": {
      "contains": "default",
      "values": {
        "max": 1000,
        "value": 1000,
        "min": 1000
      },
      "type": "gauge"
    },
    "checks": {
      "type": "rate",
      "contains": "default",
      "values": {
        "rate": 0.9998857012229969,
        "passes": 34992,
        "fails": 4
      }
    },
    "http_req_waiting": {
      "type": "trend",
      "contains": "time",
      "values": {
        "min": 582.6058,
        "med": 1252.34655,
        "max": 55855.6365,
        "p(90)": 4592.17647,
        "p(95)": 5917.338974999992,
        "avg": 2295.4944467999994
      }
    },
    "http_req_receiving": {
      "type": "trend",
      "contains": "time",
      "values": {
        "min": 0,
        "med": 0.5071,
        "max": 1083.252,
        "p(90)": 4.1133500000000005,
        "p(95)": 6.26704,
        "avg": 1.5400531428571451
      }
    },
    "data_received": {
      "values": {
        "count": 9149948,
        "rate": 95202.43626062864
      },
      "type": "counter",
      "contains": "data"
    },
    "iterations": {
      "type": "counter",
      "contains": "default",
      "values": {
        "count": 3500,
        "rate": 36.41643940623491
      }
    },
    "http_req_failed": {
      "type": "rate",
      "contains": "default",
      "values": {
        "rate": 0.00028571428571428574,
        "passes": 2,
        "fails": 6998
      }
    },
    "http_req_blocked": {
      "type": "trend",
      "contains": "time",
      "values": {
        "avg": 675.8165902571434,
        "min": 0,
        "med": 0,
        "max": 10936.9857,
        "p(90)": 2278.45291,
        "p(95)": 5259.062474999989
      }
    },
    "http_req_connecting": {
      "values": {
        "p(95)": 447.5917,
        "avg": 157.47791328571444,
        "min": 0,
        "med": 0,
        "max": 7301.9545,
        "p(90)": 341.5369
      },
      "type": "trend",
      "contains": "time"
    }
  },
  "root_group": {
    "name": "",
    "path": "",
    "id": "d41d8cd98f00b204e9800998ecf8427e",
    "groups": [
      {
        "name": "01. Regres.in API Create",
        "path": "::01. Regres.in API Create",
        "id": "3a288906974b2bac4943773b527abe70",
        "groups": [],
        "checks": [
            {
              "name": "response status code should be 201 (CREATED)",
              "path": "::01. Regres.in API Create::response status code should be 201 (CREATED)",
              "id": "c9eb7ba1c6a57195fa74c1a314bb1436",
              "passes": 3500,
              "fails": 0
            },
            {
              "name": "response body should not be empty",
              "path": "::01. Regres.in API Create::response body should not be empty",
              "id": "e1b47800fee64a4bccaee2537f878a51",
              "passes": 3500,
              "fails": 0
            },
            {
              "name": "response body should contain keys: id, name, job, and createdAt",
              "path": "::01. Regres.in API Create::response body should contain keys: id, name, job, and createdAt",
              "id": "b295e6bce11e3aa5515a932497e71817",
              "passes": 3500,
              "fails": 0
            },
            {
              "name": "name value in response should be equal to name value in request",
              "path": "::01. Regres.in API Create::name value in response should be equal to name value in request",
              "id": "fdb5af3bfec2b08296bd3943e0609fa0",
              "passes": 3500,
              "fails": 0
            },
            {
              "name": "job value in response should be equal to job value in request",
              "path": "::01. Regres.in API Create::job value in response should be equal to job value in request",
              "id": "572a0c50dd69eae36bebdab1bf1b476d",
              "passes": 3500,
              "fails": 0
            }
          ]
      },
      {
        "name": "2. Regres.in API Update",
        "path": "::2. Regres.in API Update",
        "id": "d519ce3fa05fa49971cb226413954b5c",
        "groups": [],
        "checks": [
            {
              "name": "response status code should be 200 (OK)",
              "path": "::2. Regres.in API Update::response status code should be 200 (OK)",
              "id": "aae2a90bc036b6303d82a74684dfb489",
              "passes": 3498,
              "fails": 2
            },
            {
              "id": "8d73332b22f5fba3a288739de2e30704",
              "passes": 3500,
              "fails": 0,
              "name": "response body should not be empty",
              "path": "::2. Regres.in API Update::response body should not be empty"
            },
            {
              "path": "::2. Regres.in API Update::response body should contain keys: name, job, and updatedAt",
              "id": "25cd936b2131f3f178eb4d3d3fffbf34",
              "passes": 3498,
              "fails": 2,
              "name": "response body should contain keys: name, job, and updatedAt"
            },
            {
              "id": "1a22f4fe4ce050cf1055d834059bbbad",
              "passes": 3498,
              "fails": 0,
              "name": "name value in response should be equal to name value in request",
              "path": "::2. Regres.in API Update::name value in response should be equal to name value in request"
            },
            {
              "name": "job value in response should be equal to job value in request",
              "path": "::2. Regres.in API Update::job value in response should be equal to job value in request",
              "id": "f8c35a7695de9d8aa498417172300a87",
              "passes": 3498,
              "fails": 0
            }
          ]
      }
    ],
    "checks": []
  },
  "options": {
    "noColor": false,
    "summaryTrendStats": [
      "avg",
      "min",
      "med",
      "max",
      "p(90)",
      "p(95)"
    ],
    "summaryTimeUnit": ""
  },
  "state": {
    "isStdOutTTY": true,
    "isStdErrTTY": true,
    "testRunDurationMs": 96110.4396
  }
}